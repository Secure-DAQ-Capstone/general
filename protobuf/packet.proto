// See README.md for information and build instructions.
//
// Note: START and END tags are used in comments to define sections used in
// tutorials.  They are not part of the syntax for Protocol Buffers.
//
// To get an in-depth walkthrough of this file and the related examples, see:
// https://developers.google.com/protocol-buffers/docs/tutorials

// [START declaration]
syntax = "proto3";
package capstone_protobuf;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
// [END declaration]

// [START messages]
message Packet {

  MetaData metadata = 1;

  Payload payload = 2;

  message Payload{
    google.protobuf.Timestamp time_data_captured = 1;
    Data data = 2;
    OriginalProtocol protocol = 3;
    bytes original_message = 4;
    int64 original_message_id = 5;

    message Data {
      string label = 1;
      repeated google.protobuf.Any data = 2;
    }

    enum OriginalProtocol {
      NMEA = 0;
      Modbus = 1;
    }
  }

}

message MetaData
{
  int32 board_id_msg_origin = 1;
  bytes nonce = 2;
  int32 time_received = 3;
  int32 time_sent = 4;

  // Defined the Relay Chain
  message RelayChainEntry {
    int32 board_id = 1;
    // the timestamp is neither the time sent or received, it is mainly the time
    // time the packet metadata was touched by the node.
    int32 timestamp = 2; 
  }

  // Add a repeated field for the RelayChainEntry. 
  repeated RelayChainEntry relay_chain = 5;
  bytes digital_signature = 6;
  optional bytes public_key = 7;
  
  optional bool signature_verified = 8;
  optional bool decryption_succeeded = 9; 
}


message EncryptedPacket {
  MetaData metadata = 1;

  bytes encrypted_payload = 2;
}

message Temperature
{
  int32 temperature = 1;
}

message Humidity
{
  int32 humidity = 1;
}

message Pressure
{
  int32 pressure = 1;
}

message GPS
{
  int64 latitude = 1;
  int64 longitude = 2;
  int64 altitude = 3;
}

message Position
{
  double latitude = 1;
  double longitude = 2;
}

message Heading
{
  double heading = 1;
  double deviation = 2;
  double variation = 3;
}

message MagneticVariation
{
  uint32 age_of_service = 1;
  double variation = 2;
}

message COGSOG
{
  uint32 cog = 1;
  double sog = 2;
}

message SysTime
{
  uint32 date = 1;
  double time = 2;
}

message GNSS
{
  uint32 date = 1;
  double time = 2;
  double latitude = 3;
  double longitude = 4;
  double altitude = 5;
  uint32 num_satellites = 6;
  uint32 HDOP = 7;
  uint32 PDOP = 8;
  double geoidal_separation = 9;
  uint32 num_reference_stations = 10;
}

message SatsInView
{
  uint32 sats_in_view = 1;
}

message Wind
{
  double speed = 1;
  double angle = 2;
}

// [END messages]
